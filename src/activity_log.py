import streamlit as st
from datetime import datetime

# --------------------------------------------
# üé® Style configuration (d·ªÖ ƒë·ªïi m√†u v·ªÅ sau)
# --------------------------------------------
STYLE = {
    "base_bg": "#f9fafb",
    "border": "#e5e7eb",
    "text_color": "#1e293b",
    "time_color": "#94a3b8",
}

# --------------------------------------------
# üß† H√†m t√≥m t·∫Øt h√†nh ƒë·ªông
# --------------------------------------------
def summarize_activity(activity: dict) -> str:
    """Chuy·ªÉn metadata k·ªπ thu·∫≠t th√†nh m√¥ t·∫£ th√¢n thi·ªán, 1 d√≤ng."""
    action = activity.get("action", "")
    meta = activity.get("metadata", {}) or {}
    node = meta.get("langgraph_node", "")
    model = meta.get("ls_model_name", "")

    # Map logic th√¢n thi·ªán
    if "call_model" in node:
        return f"üì° ƒêang g·ª≠i y√™u c·∫ßu ƒë·∫øn {model or 'm√¥ h√¨nh AI'}"
    if "retrieval" in node or "vector" in node:
        return "üîç ƒêang truy xu·∫•t d·ªØ li·ªáu t·ª´ kho tri th·ª©c CMC"
    if "embedding" in node:
        return "üß† ƒêang t·∫°o vector embedding cho d·ªØ li·ªáu"
    if "judge" in node:
        return "‚öñÔ∏è ƒêang ch·∫•m ƒëi·ªÉm ph·∫£n h·ªìi m√¥ h√¨nh"
    if "summary" in node or "aggregate" in node:
        return "üìä ƒêang t·ªïng h·ª£p k·∫øt qu·∫£ ƒë√°nh gi√°"
    if "Ho√†n t·∫•t" in action or "end" in action:
        return "‚úÖ Ho√†n t·∫•t ti·∫øn tr√¨nh"
    if "L·ªói" in action or "‚ùå" in action:
        return "‚ùå L·ªói khi g·ªçi backend"
    return "üî∏ " + (action or "ƒêang x·ª≠ l√Ω...")

# --------------------------------------------
# üåà T√πy m√†u n·ªÅn theo h√†nh ƒë·ªông
# --------------------------------------------
def get_bg_color(summary: str) -> str:
    if "L·ªói" in summary:
        return "#fee2e2"   # ƒë·ªè nh·∫°t
    if "Ho√†n t·∫•t" in summary or "‚úÖ" in summary:
        return "#dcfce7"   # xanh nh·∫°t
    if "truy xu·∫•t" in summary or "retrieval" in summary:
        return "#fef9c3"   # v√†ng nh·∫°t
    if "g·ª≠i y√™u c·∫ßu" in summary or "üì°" in summary:
        return "#e0f2fe"   # xanh da tr·ªùi nh·∫°t
    return STYLE["base_bg"]

# --------------------------------------------
# üß© Render UI
# --------------------------------------------
def render_activity_log():
    """Hi·ªÉn th·ªã log ho·∫°t ƒë·ªông AI - ch·ªâ 1 d√≤ng m√¥ t·∫£, c√≥ m√†u v√† icon."""
    st.subheader("‚ö° Nh·∫≠t k√Ω ho·∫°t ƒë·ªông")

    activities = st.session_state.get("activities", [])
    if not activities:
        st.info("Kh√¥ng c√≥ ho·∫°t ƒë·ªông n√†o.")
        return

    for activity in activities:
        summary = summarize_activity(activity)
        bg = get_bg_color(summary)
        time = activity.get("time", datetime.now().strftime("%H:%M:%S"))

        st.markdown(
            f"""
            <div style="
                background:{bg};
                border:1px solid {STYLE['border']};
                border-radius:10px;
                padding:8px 12px;
                margin-bottom:8px;
                display:flex;
                justify-content:space-between;
                align-items:center;
                font-size:13px;
                color:{STYLE['text_color']};
                box-shadow:0 1px 2px rgba(0,0,0,0.05);
                transition:background 0.2s ease;
            ">
                <div>{summary}</div>
                <div style='color:{STYLE['time_color']};font-size:11px'>{time}</div>
            </div>
            """,
            unsafe_allow_html=True,
        )
